response:

finished: boolean
Boolean value that indicates whether the response has completed.
Starts as false. After response.end() executes, the value will be true

response.getHeader(name)
Reads out a header that's already been queued but not sent to the client. Note that the name is case insensitive. The type of the return value depends on the arguments provided to response.setHeader()

response.getHeaderNames()
Returns an array containing the unique names of the current outgoing headers. All header names are lowercase.

response.getHeaders()
Returns a shallow copy of the current outgoing headers. Since a shallow copy is used, array values may be mutated without additional calls to various header-related http module methods. The keys of the returned object are the header names and the values are the respective header values. All header names are lowercase.

response.hasHeader(name)
Returns true if the header identified by name is currently set in the outgoing headers. Note that the header name matching is case-insensitive.

response.headersSent
Boolean (read-only). True if headers were sent, false otherwise.

response.removeHeader(name)
Removes a header that's queued for implicit sending.


response.sendDate
When true, the Date header will be automatically generated and sent in the response if it is not already present in the headers. Defaults to true.
This should only be disabled for testing; HTTP requires the Date header in responses.


response.setHeader(name, value)
Sets a single header value for implicit headers. If this header already exists in the to-be-sent headers, its value will be replaced. Use an array of strings here to send multiple headers with the same name. Non-string values will be stored without modification. Therefore, response.getHeader() may return non-string values. However, the non-string values will be converted to strings for network transmission.

response.setTimeout(msecs[, callback])


response.statusCode
When using implicit headers (not calling response.writeHead() explicitly), this property controls the status code that will be sent to the client when the headers get flushed

response.statusMessage


response.writeContinue()

response.writeHead(statusCode[, statusMessage][, headers])
